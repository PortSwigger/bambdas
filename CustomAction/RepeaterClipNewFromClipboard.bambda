id: 8e740b42-3e7a-45c5-9a92-8b18b494bc92
name: RepeaterClip: New from Clipboard
function: CUSTOM_ACTION
location: REPEATER
source: |+
  /**
   * Given the clipboard contains a repeater request compressed and encoded by the RepeaterClip Bambda,
   * this Bambda creates a new Repeater tab containing that request.
   *
   * @author 0xd0ug (https://github.com/0xd0ug)
   **/
   
  try {
      String clipboardContent = (String) java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().getData(java.awt.datatransfer.DataFlavor.stringFlavor);
      
      if (clipboardContent == null || !clipboardContent.startsWith("REPEATERCLIP/")) {
          logging.logToError("Invalid clipboard content. Expected format: REPEATERCLIP/protocol/host/port/base64data");
          return;
      }
      
      String[] parts = clipboardContent.split("/", 5);
      if (parts.length != 5) {
          logging.logToError("Invalid clipboard format. Expected 5 parts separated by '/'");
          return;
      }
      
      String protocol = parts[1];
      String host = parts[2];
      int port = Integer.parseInt(parts[3]);
      String base64Data = parts[4];
      
      var decodedData = api.utilities().base64Utils().decode(burp.api.montoya.core.ByteArray.byteArray(base64Data));
      var decompressedRequest = api.utilities().compressionUtils().decompress(decodedData, burp.api.montoya.utilities.CompressionType.GZIP);
      
      boolean isSecure = "https".equals(protocol);
      var httpService = burp.api.montoya.http.HttpService.httpService(host, port, isSecure);
      var restoredRequest = burp.api.montoya.http.message.requests.HttpRequest.httpRequest(httpService, decompressedRequest);
      
      api.repeater().sendToRepeater(restoredRequest);
      
      logging.logToOutput("Successfully restored request from clipboard and sent to new Repeater tab");
      logging.logToOutput("Protocol: " + protocol + ", Host: " + host + ", Port: " + port);
      
  } catch (Exception e) {
      logging.logToError("Error restoring request from clipboard: " + e.getMessage());
      e.printStackTrace();
  }
